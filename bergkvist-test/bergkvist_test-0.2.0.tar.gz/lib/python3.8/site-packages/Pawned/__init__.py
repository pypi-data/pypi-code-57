__author__ = "RouxpiTech"
__name__ = "Pawned"
__version__ = "1.0.0"


import requests
import hashlib
import re

class Passwords:
	def __init__(self):
		pass

	def check_password(self, pwd):
		sha1pwd = hashlib.sha1(pwd.encode("utf-8")).hexdigest().upper()
		r = requests.get("https://api.pwnedpasswords.com/range/" +  sha1pwd[:5])
		if r.status_code != 200:
			raise PawnedHTTPErr(r"HTTP Status Code: {r.status_code}")
		hashes = []
		for line in r.text.splitlines():
			hashes.append(":")
		for h in hashes:
			if h[0] == sha1pwd[5:]:
				return f"{pwd} was found with {h[1]} matches!"
		return f"{pwd} not found"

class Breaches:
	def __init__(self):
		pass
	
	def get_all_breaches_account(self, email, domain=None):
		if not re.match("[^@]+@[^@]+\.[^@]+", email):
			PawnedInvalidEmail(f"{email} is not a valid email")
		if domain == None:
			r = requests.get(f"https://haveibeenpwned.com/api/breachedaccount/{email}")
		else:
			r = requests.get(f"https://haveibeenpwned.com/api/breachedaccount/{email}?domain={domain}")
		if r.status_code != 200:
			return []
		r = r.json()
		return r

	def get_all_breached_sites(self, domain=None):
		if domain == None:
			r = requests.get("https://haveibeenpwned.com/api/v2/breaches")
		else: 
			r = requests.get(f"https://haveibeenpwned.com/api/v2/breaches?domain={domain}")
		if r.status_code != 200:
			raise PawnedHTTPErr(r"HTTP Status Code: {r.status_code}")
		return r.json()

	def get_single_breach_site(self, site):
		r = requests.get(f"https://haveibeenpwned.com/api/v2/breach/{site}")
		if r.status_code != 200:
			raise PawnedHTTPErr(r"HTTP Status Code: {r.status_code}")
		return r.json()
	
	def get_all_data_classes(self):
		r = requests.get("https://haveibeenpwned.com/api/v2/dataclasses")
		if r.status_code != 200:
			raise PawnedHTTPErr(r"HTTP Status Code: {r.status_code}")
		return r.json()

class Pastes:
	def __init__(self):
		pass

	def get_all_pastes_account(self, email):
		if not re.match("[^@]+@[^@]+\.[^@]+", email):
			PawnedInvalidEmail(f"{email} is not a valid email")
		r = requests.get(f"https://haveibeenpwned.com/api/v2/pasteaccount/{email}")
		if r.status_code != 200:
			return []
		return r.json()

class PawnedInvalidEmail(Exception):
	pass

class PawnedHTTPErr(Exception):
	pass
